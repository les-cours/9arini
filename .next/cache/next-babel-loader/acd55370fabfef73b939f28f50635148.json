{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/containers/HookForm/LoginForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\nimport { useRouter } from 'next/router';\nimport { useAuth } from 'contexts/AuthContext';\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    errors\n  } = useForm();\n  const {\n    checkLogin,\n    login,\n    error\n  } = useAuth();\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(null);\n  const router = useRouter();\n  useEffect(() => {\n    const checkUser = async () => {\n      const loggedInUser = await checkLogin();\n      setAuth(loggedInUser);\n      if (loggedInUser) {\n        router.push('/');\n      }\n    };\n    checkUser();\n  }, [checkLogin, router]);\n  useEffect(() => {\n    register({\n      name: 'email'\n    });\n    register({\n      name: 'password'\n    });\n  }, [register]);\n  const onSubmit = async data => {\n    const requestBody = {\n      username: data.email,\n      password: data.password,\n      osname: \"linux\"\n    };\n    try {\n      await login(requestBody);\n      const loggedInUser = await checkLogin();\n      if (loggedInUser) {\n        router.push('/');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Block, {\n    marginBottom: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    label: \"Your Email\",\n    caption: \"johndoe@demo.io\",\n    error: errors.email && 'Please enter a valid email address',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    name: \"email\",\n    inputRef: register({\n      required: 'Email is required',\n      pattern: {\n        value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n        message: 'Please enter a valid email address'\n      }\n    }),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))), __jsx(Block, {\n    marginBottom: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    label: \"Password\",\n    caption: \"Password\",\n    error: errors.password && 'This field is required',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    inputRef: register({\n      required: 'Password is required',\n      maxLength: {\n        value: 32,\n        message: 'Password cannot exceed 32 characters'\n      }\n    }),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), error && __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }, error)), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Login\"));\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useState","useEffect","useForm","FormControl","Input","Button","Block","useRouter","useAuth","LoginForm","register","handleSubmit","setValue","errors","checkLogin","login","error","auth","setAuth","router","checkUser","loggedInUser","push","name","onSubmit","data","requestBody","username","email","password","osname","console","__jsx","style","width","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","caption","inputRef","required","pattern","value","message","overrides","InputContainer","backgroundColor","type","maxLength","color"],"sources":["/home/chouaib/code/learn/frontend/containers/HookForm/LoginForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\n\nimport { useRouter } from 'next/router';\nimport { useAuth } from 'contexts/AuthContext';\n\ntype FormData = {\n    email: string;\n    password: string;\n};\n\nconst LoginForm: React.FC = () => {\n    const { register, handleSubmit, setValue, errors } = useForm<FormData>();\n    const { checkLogin, login, error } = useAuth();\n    const [auth, setAuth] = useState(null);\n    const router = useRouter();\n\n    useEffect(() => {\n        const checkUser = async () => {\n            const loggedInUser = await checkLogin();\n            setAuth(loggedInUser);\n            if (loggedInUser) {\n                router.push('/');\n            }\n        };\n\n        checkUser();\n    }, [checkLogin, router]);\n\n    useEffect(() => {\n        register({ name: 'email' });\n        register({ name: 'password' });\n    }, [register]);\n\n    const onSubmit = async (data: FormData) => {\n        const requestBody = {\n            username: data.email,\n            password: data.password,\n            osname: \"linux\",\n        };\n\n        try {\n            await login(requestBody);\n            const loggedInUser = await checkLogin();\n            if (loggedInUser) {\n                router.push('/');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%' }}>\n            <Block marginBottom=\"30px\">\n                <FormControl\n                    label=\"Your Email\"\n                    caption=\"johndoe@demo.io\"\n                    error={errors.email && 'Please enter a valid email address'}\n                >\n                    <Input\n                        name=\"email\"\n                        inputRef={register({\n                            required: 'Email is required',\n                            pattern: {\n                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                message: 'Please enter a valid email address',\n                            },\n                        })}\n                        overrides={{\n                            InputContainer: {\n                                style: () => {\n                                    return { backgroundColor: 'transparent' };\n                                },\n                            },\n                        }}\n                    />\n                </FormControl>\n            </Block>\n\n            <Block marginBottom=\"30px\">\n                <FormControl\n                    label=\"Password\"\n                    caption=\"Password\"\n                    error={errors.password && 'This field is required'}\n                >\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        inputRef={register({ required: 'Password is required', maxLength: { value: 32, message: 'Password cannot exceed 32 characters' } })}\n                        overrides={{\n                            InputContainer: {\n                                style: () => {\n                                    return { backgroundColor: 'transparent' };\n                                },\n                            },\n                        }}\n                    />\n                </FormControl>\n                {error && <p style={{ color: \"red\" }}>{error}</p>}\n            </Block>\n\n            <Button type=\"submit\">Login</Button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}