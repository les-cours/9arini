{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/containers/Formik/Field.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { getIn, FormikConsumer } from 'formik';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Checkbox } from 'baseui/checkbox';\nimport { RadioGroup, Radio } from 'baseui/radio';\nimport { Datepicker } from 'baseui/datepicker';\nimport { Select } from 'baseui/select';\nexport default function Field({\n  field,\n  name\n}) {\n  return __jsx(FormikConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, formikProps => {\n    const {\n      errors,\n      touched,\n      values\n    } = formikProps;\n    const error = getIn(errors, name);\n    const isTouched = !!getIn(touched, name);\n    const value = getIn(values, name);\n    return __jsx(FieldSwitch, _extends({\n      name: name,\n      field: field,\n      hasError: isTouched && !!error,\n      isValid: !error && isTouched,\n      value: value\n    }, formikProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }));\n  });\n}\nfunction FieldSwitch({\n  name,\n  field,\n  handleChange,\n  setFieldValue,\n  setFieldTouched,\n  value\n}) {\n  const onBlur = () => setFieldTouched(name);\n  switch (field.type) {\n    case 'text':\n      {\n        return __jsx(Input, {\n          name: name,\n          value: value,\n          onChange: e => setFieldValue(name, e.target.value),\n          onBlur: onBlur,\n          overrides: {\n            InputContainer: {\n              style: () => {\n                return {\n                  backgroundColor: 'transparent'\n                };\n              }\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        });\n      }\n    case 'textarea':\n      {\n        return __jsx(Textarea, {\n          name: name,\n          value: value,\n          onChange: e => setFieldValue(name, e.target.value),\n          onBlur: onBlur,\n          overrides: {\n            InputContainer: {\n              style: () => {\n                return {\n                  backgroundColor: 'transparent'\n                };\n              }\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        });\n      }\n    case 'integer':\n      {\n        return __jsx(Input, {\n          name: name,\n          value: value,\n          onChange: handleChange,\n          onBlur: onBlur,\n          type: \"number\",\n          overrides: {\n            InputContainer: {\n              style: () => {\n                return {\n                  backgroundColor: 'transparent'\n                };\n              }\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }\n        });\n      }\n    case 'checkbox':\n      {\n        const {\n          checkboxLabel\n        } = field;\n        return __jsx(Checkbox, {\n          checked: value,\n          onChange: e => setFieldValue(name, e.target.checked),\n          onBlur: onBlur,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }\n        }, checkboxLabel);\n      }\n    case 'radio':\n      {\n        const {\n          options\n        } = field;\n        return __jsx(RadioGroup, {\n          value: value,\n          onChange: e => setFieldValue(name, e.target.value),\n          onBlur: onBlur,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }\n        }, options.map(option => __jsx(Radio, {\n          key: option.value,\n          value: option.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }\n        }, option.label)));\n      }\n    case 'date':\n      {\n        return __jsx(Datepicker, {\n          value: value,\n          onChange: ({\n            date\n          }) => setFieldValue(name, date),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }\n        });\n      }\n    case 'select':\n      {\n        const {\n          options\n        } = field;\n        return __jsx(Select, {\n          options: options,\n          value: value,\n          onChange: params => setFieldValue(name, params.value),\n          onBlur: onBlur,\n          overrides: {\n            ControlContainer: {\n              style: () => {\n                return {\n                  backgroundColor: 'transparent'\n                };\n              }\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        });\n      }\n    default:\n      return null;\n  }\n}","map":{"version":3,"names":["React","getIn","FormikConsumer","Input","Textarea","Checkbox","RadioGroup","Radio","Datepicker","Select","Field","field","name","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formikProps","errors","touched","values","error","isTouched","value","FieldSwitch","_extends","hasError","isValid","handleChange","setFieldValue","setFieldTouched","onBlur","type","onChange","e","target","overrides","InputContainer","style","backgroundColor","checkboxLabel","checked","options","map","option","key","label","date","params","ControlContainer"],"sources":["/home/chouaib/code/learn/frontend/containers/Formik/Field.tsx"],"sourcesContent":["import React from 'react';\nimport { getIn, FormikConsumer, FormikProps } from 'formik';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Checkbox } from 'baseui/checkbox';\nimport { RadioGroup, Radio } from 'baseui/radio';\nimport { Datepicker } from 'baseui/datepicker';\nimport { Select } from 'baseui/select';\nimport { FormField } from './types';\n\ninterface Props {\n  name: string;\n  field: FormField;\n}\n\nexport default function Field({ field, name }: Props) {\n  return (\n    <FormikConsumer>\n      {formikProps => {\n        const { errors, touched, values } = formikProps;\n        const error: string | undefined = getIn(errors, name);\n        const isTouched: boolean = !!getIn(touched, name);\n        const value = getIn(values, name);\n        return (\n          <FieldSwitch\n            name={name}\n            field={field}\n            hasError={isTouched && !!error}\n            isValid={!error && isTouched}\n            value={value}\n            {...formikProps}\n          />\n        );\n      }}\n    </FormikConsumer>\n  );\n}\n\ntype FieldSwitchProps = {\n  name: string;\n  field: FormField;\n  hasError: boolean;\n  isValid: boolean;\n  value: any;\n  handleBlur: Function;\n  handleChange: Function;\n} & FormikProps<any>;\n\nfunction FieldSwitch({\n  name,\n  field,\n  handleChange,\n  setFieldValue,\n  setFieldTouched,\n  value,\n}: FieldSwitchProps) {\n  const onBlur = () => setFieldTouched(name);\n\n  switch (field.type) {\n    case 'text': {\n      return (\n        <Input\n          name={name}\n          value={value}\n          onChange={(e: any) => setFieldValue(name, e.target.value)}\n          onBlur={onBlur}\n          overrides={{\n            InputContainer: {\n              style: () => {\n                return { backgroundColor: 'transparent' };\n              },\n            },\n          }}\n        />\n      );\n    }\n\n    case 'textarea': {\n      return (\n        <Textarea\n          name={name}\n          value={value}\n          onChange={(e: any) => setFieldValue(name, e.target.value)}\n          onBlur={onBlur}\n          overrides={{\n            InputContainer: {\n              style: () => {\n                return { backgroundColor: 'transparent' };\n              },\n            },\n          }}\n        />\n      );\n    }\n\n    case 'integer': {\n      return (\n        <Input\n          name={name}\n          value={value}\n          onChange={handleChange}\n          onBlur={onBlur}\n          type=\"number\"\n          overrides={{\n            InputContainer: {\n              style: () => {\n                return { backgroundColor: 'transparent' };\n              },\n            },\n          }}\n        />\n      );\n    }\n\n    case 'checkbox': {\n      const { checkboxLabel } = field;\n      return (\n        <Checkbox\n          checked={value}\n          onChange={(e: any) => setFieldValue(name, e.target.checked)}\n          onBlur={onBlur}\n        >\n          {checkboxLabel}\n        </Checkbox>\n      );\n    }\n\n    case 'radio': {\n      const { options } = field;\n      return (\n        <RadioGroup\n          value={value}\n          onChange={e => setFieldValue(name, e.target.value)}\n          onBlur={onBlur}\n        >\n          {options.map(option => (\n            <Radio key={option.value} value={option.value}>\n              {option.label}\n            </Radio>\n          ))}\n        </RadioGroup>\n      );\n    }\n\n    case 'date': {\n      return (\n        <Datepicker\n          value={value}\n          onChange={({ date }) => setFieldValue(name, date)}\n        />\n      );\n    }\n\n    case 'select': {\n      const { options } = field;\n      return (\n        <Select\n          options={options}\n          value={value}\n          onChange={params => setFieldValue(name, params.value)}\n          onBlur={onBlur}\n          overrides={{\n            ControlContainer: {\n              style: () => {\n                return { backgroundColor: 'transparent' };\n              },\n            },\n          }}\n        />\n      );\n    }\n\n    default:\n      return null;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}