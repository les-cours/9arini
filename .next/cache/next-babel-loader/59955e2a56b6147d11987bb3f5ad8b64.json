{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/components/learning/classroom/Chapters.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Sticky from 'react-stickynode';\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_Chapters = gql`\nquery Chapters($classRoomID: String!) {\n  chapters(classRoomID: $classRoomID) {\n   chapterID\n    title\n    arabicTitle\n    description\n  }\n}\n\n`;\nconst ClassRooms = ({\n  className = '',\n  onClick,\n  id\n}) => {\n  const {\n    query\n  } = useRouter();\n  let chapters = [];\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(GET_Chapters, {\n    variables: {\n      classRoomID: id\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"No data available\");\n  console.log(\"ch\", data);\n  const {\n    Chapters\n  } = data;\n  chapters = Chapters;\n  return __jsx(Sticky, {\n    top: \".navbar\",\n    innerZ: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  });\n};\nexport default ClassRooms;","map":{"version":3,"names":["React","useRouter","Sticky","gql","useQuery","GET_Chapters","ClassRooms","className","onClick","id","query","chapters","data","loading","error","fetchMore","variables","classRoomID","notifyOnNetworkStatusChange","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","console","log","Chapters","top","innerZ"],"sources":["/home/chouaib/code/learn/frontend/components/learning/classroom/Chapters.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport MenuWrapper, { Menu, MenuItem, MenuLink } from \"../../SideMenu/SideMenu.styled\";\nimport {gql, useQuery} from \"@apollo/client\";\n\n\ntype MenuProps = {\n    className?: string;\n    onClick?: () => void;\n};\n\n\nconst GET_Chapters = gql`\nquery Chapters($classRoomID: String!) {\n  chapters(classRoomID: $classRoomID) {\n   chapterID\n    title\n    arabicTitle\n    description\n  }\n}\n\n`;\n\n\nconst ClassRooms = ({ className = '', onClick, id }) => {\n    const {query} = useRouter();\n\n\n\n    let chapters = []\n\n    const { data, loading, error, fetchMore } =\n        useQuery<{ Chapters: { title: string; chapterID: string }[] }>(GET_Chapters, {\n        variables: { classRoomID : id },\n        notifyOnNetworkStatusChange: true,\n    });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    if (!data) return <p>No data available</p>;\n\n    console.log(\"ch\",data)\n    const { Chapters } = data;\n\n    chapters =  Chapters\n\n\n\n\n\n\n\n    return (\n        <Sticky top=\".navbar\" innerZ=\"1\">\n            {/*<MenuWrapper className=\"side-menu-wrapper\">*/}\n            {/*    <Menu className={`side-menu ${className}`}>*/}\n            {/*        {chapters.map((item) => {*/}\n\n            {/*            return (*/}\n            {/*                <MenuItem key={`side-menu--key${item.classRoomID}`} onClick={onClick}>*/}\n            {/*                    <Link href={\"/classrooms/\"+item.classRoomID}>*/}\n            {/*                        <MenuLink className={query.classRoomID == item.classRoomID ? 'active' : ''}>*/}\n            {/*                            {item.title}*/}\n            {/*                        </MenuLink>*/}\n            {/*                    </Link>*/}\n            {/*                </MenuItem>*/}\n            {/*            );*/}\n            {/*        })}*/}\n            {/*    </Menu>*/}\n            {/*</MenuWrapper>*/}\n        </Sticky>\n    );\n};\n\nexport default ClassRooms;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA6B,OAAO;AAChD,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAOC,MAAM,MAAM,kBAAkB;AAErC,SAAQC,GAAG,EAAEC,QAAQ,QAAO,gBAAgB;AAS5C,MAAMC,YAAY,GAAGF,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,MAAMG,UAAU,GAAGA,CAAC;EAAEC,SAAS,GAAG,EAAE;EAAEC,OAAO;EAAEC;AAAG,CAAC,KAAK;EACpD,MAAM;IAACC;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAI3B,IAAIU,QAAQ,GAAG,EAAE;EAEjB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC,GACrCX,QAAQ,CAAuDC,YAAY,EAAE;IAC7EW,SAAS,EAAE;MAAEC,WAAW,EAAGR;IAAG,CAAC;IAC/BS,2BAA2B,EAAE;EACjC,CAAC,CAAC;EACF,IAAIL,OAAO,EAAE,OAAOM,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EACrC,IAAIX,KAAK,EAAE,OAAOK,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACX,KAAK,CAACY,OAAW,CAAC;EAC/C,IAAI,CAACd,IAAI,EAAE,OAAOO,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAoB,CAAC;EAE1CE,OAAO,CAACC,GAAG,CAAC,IAAI,EAAChB,IAAI,CAAC;EACtB,MAAM;IAAEiB;EAAS,CAAC,GAAGjB,IAAI;EAEzBD,QAAQ,GAAIkB,QAAQ;EAQpB,OACIV,KAAA,CAACjB,MAAM;IAAC4B,GAAG,EAAC,SAAS;IAACC,MAAM,EAAC,GAAG;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAiBxB,CAAC;AAEjB,CAAC;AAED,eAAenB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}