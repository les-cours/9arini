{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/chouaib/code/learn/frontend/containers/Posts/Comment.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar } from 'baseui/avatar';\nimport { CommentCard, CommentInfo, CommentAuthor, CommentTime, Button } from './Posts.styled';\nvar Comment = function Comment(_ref) {\n  var role = _ref.role,\n    avatar = _ref.avatar,\n    name = _ref.name,\n    content = _ref.content,\n    handleLike = _ref.handleLike,\n    handleReply = _ref.handleReply;\n  var renderHtml = function renderHtml(data) {\n    return {\n      __html: data\n    };\n  };\n  return __jsx(React.Fragment, null, role === 'author' && __jsx(CommentCard, {\n    className: \"author comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    name: name,\n    size: \"scale1000\",\n    src: avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), __jsx(CommentInfo, {\n    className: \"info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(CommentAuthor, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"span\", {\n    dangerouslySetInnerHTML: renderHtml(content),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }))), role === 'user' && __jsx(CommentCard, {\n    className: \"user comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    name: name,\n    size: \"scale1000\",\n    src: avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(CommentInfo, {\n    className: \"info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(CommentAuthor, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"span\", {\n    dangerouslySetInnerHTML: renderHtml(content),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(CommentTime, {\n    className: \"time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, handleLike && __jsx(Button, {\n    type: \"button\",\n    onClick: handleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"1 like\"), handleReply && __jsx(Button, {\n    type: \"button\",\n    onClick: handleReply,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Reply\")))));\n};\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","Avatar","CommentCard","CommentInfo","CommentAuthor","CommentTime","Button","Comment","_ref","role","avatar","name","content","handleLike","handleReply","renderHtml","data","__html","__jsx","Fragment","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","src","dangerouslySetInnerHTML","type","onClick","_c","$RefreshReg$"],"sources":["/home/chouaib/code/learn/frontend/containers/Posts/Comment.tsx"],"sourcesContent":["import React from 'react';\nimport { Avatar } from 'baseui/avatar';\nimport {\n  CommentCard,\n  CommentInfo,\n  CommentAuthor,\n  CommentTime,\n  Button,\n} from './Posts.styled';\n\ntype CommentProps = {\n  role: 'author' | 'user';\n  avatar: string;\n  name: string;\n  content: string;\n  handleLike?: () => void;\n  handleReply?: () => void;\n};\n\nconst Comment = ({\n  role,\n  avatar,\n  name,\n  content,\n  handleLike,\n  handleReply,\n}: CommentProps) => {\n  const renderHtml = (data: string) => {\n    return { __html: data };\n  };\n\n  return (\n    <>\n      {role === 'author' && (\n        <CommentCard className=\"author comment\">\n          <Avatar name={name} size=\"scale1000\" src={avatar} />\n          <CommentInfo className=\"info\">\n            <CommentAuthor>{name}</CommentAuthor>\n            <span dangerouslySetInnerHTML={renderHtml(content)} />\n          </CommentInfo>\n        </CommentCard>\n      )}\n      {role === 'user' && (\n        <CommentCard className=\"user comment\">\n          <Avatar name={name} size=\"scale1000\" src={avatar} />\n          <CommentInfo className=\"info\">\n            <CommentAuthor>{name}</CommentAuthor>\n            <span dangerouslySetInnerHTML={renderHtml(content)} />\n            <CommentTime className=\"time\">\n              {handleLike && (\n                <Button type=\"button\" onClick={handleLike}>\n                  1 like\n                </Button>\n              )}\n              {handleReply && (\n                <Button type=\"button\" onClick={handleReply}>\n                  Reply\n                </Button>\n              )}\n            </CommentTime>\n          </CommentInfo>\n        </CommentCard>\n      )}\n    </>\n  );\n};\n\nexport default Comment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}