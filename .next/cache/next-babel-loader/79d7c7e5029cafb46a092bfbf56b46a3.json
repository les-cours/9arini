{"ast":null,"code":"var _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { useRouter } from \"next/router\";\nvar PrivateRoute = function PrivateRoute(_ref) {\n  _s();\n  var children = _ref.children;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var router = useRouter();\n  useEffect(function () {\n    if (user == null) {\n      router.push('login');\n    }\n  }, []);\n  return __jsx(React.Fragment, null, children);\n};\n_s(PrivateRoute, \"TvYxV32Vja8OVsUEHiCVL1NfoQQ=\", false, function () {\n  return [useAuth, useRouter];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useAuth","useRouter","PrivateRoute","_ref","_s","children","_useAuth","user","router","push","__jsx","Fragment","_c","$RefreshReg$"],"sources":["/home/chouaib/code/learn/frontend/contexts/Protect.tsx"],"sourcesContent":["import React, {useEffect} from \"react\";\n\nimport {useAuth} from \"./AuthContext\";\nimport {useRouter} from \"next/router\";\n\n\nconst PrivateRoute = ({children}) => {\n  const {user} = useAuth()\n const router =  useRouter()\n\n    useEffect(() => {\n        if (user == null) {\n            router.push('login')\n        }\n    }, []);\n\n  return <>{children}</>\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,SAAQC,OAAO,QAAO,eAAe;AACrC,SAAQC,SAAS,QAAO,aAAa;AAGrC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAdC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAC7B,IAAAC,QAAA,GAAeN,OAAO,CAAC,CAAC;IAAjBO,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,IAAMC,MAAM,GAAIP,SAAS,CAAC,CAAC;EAExBF,SAAS,CAAC,YAAM;IACZ,IAAIQ,IAAI,IAAI,IAAI,EAAE;MACdC,MAAM,CAACC,IAAI,CAAC,OAAO,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,OAAOC,KAAA,CAAAZ,KAAA,CAAAa,QAAA,QAAGN,QAAW,CAAC;AACxB,CAAC;AAACD,EAAA,CAXIF,YAAY;EAAA,QACDF,OAAO,EACPC,SAAS;AAAA;AAAAW,EAAA,GAFpBV,YAAY;AAalB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}