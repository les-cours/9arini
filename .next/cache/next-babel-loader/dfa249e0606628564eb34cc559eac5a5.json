{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _s = $RefreshSig$();\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useMemo } from 'react';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nvar apolloClient;\nfunction createApolloClient() {\n  var authLink = setContext(function (_, _ref) {\n    var headers = _ref.headers;\n    // const token = getToken();\n    var token = process.env.NEXT_PUBLIC_GITHUB_AUTH_TOKEN;\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? \"Bearer \".concat(token) : ''\n      })\n    };\n  });\n  var httpLink = new HttpLink({\n    uri: process.env.NEXT_PUBLIC_APOLLO_GITHUB_CLIENT_URL,\n    // Server URL (must be absolute)\n    credentials: 'same-origin'\n  });\n  return new ApolloClient({\n    ssrMode: false,\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n}\nexport function initializeApollo() {\n  var _apolloClient2;\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n  // gets hydrated here\n  if (initialState) {\n    // Get existing cache, loaded during client side data fetching\n    var existingCache = _apolloClient.extract();\n    // Restore the cache using the data passed from getStaticProps/getServerSideProps\n    // combined with the existing cached data\n    _apolloClient.cache.restore(_objectSpread(_objectSpread({}, existingCache), initialState));\n  }\n  // For SSG and SSR always create a new Apollo Client\n  if (false) return _apolloClient;\n  // Create the Apollo Client once in the client\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  _s();\n  var store = useMemo(function () {\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}\n_s(useApollo, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"names":["useMemo","ApolloClient","HttpLink","InMemoryCache","setContext","apolloClient","createApolloClient","authLink","_","_ref","headers","token","process","env","NEXT_PUBLIC_GITHUB_AUTH_TOKEN","_objectSpread","authorization","concat","httpLink","uri","NEXT_PUBLIC_APOLLO_GITHUB_CLIENT_URL","credentials","ssrMode","link","cache","initializeApollo","_apolloClient2","initialState","arguments","length","undefined","_apolloClient","existingCache","extract","restore","useApollo","_s","store"],"sources":["/home/chouaib/code/learn/frontend/apollo/github.client.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nlet apolloClient;\n\nfunction createApolloClient() {\n  const authLink = setContext((_, { headers }) => {\n    // const token = getToken();\n    const token = process.env.NEXT_PUBLIC_GITHUB_AUTH_TOKEN;\n\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  });\n  const httpLink = new HttpLink({\n    uri: process.env.NEXT_PUBLIC_APOLLO_GITHUB_CLIENT_URL, // Server URL (must be absolute)\n    credentials: 'same-origin',\n  });\n\n  return new ApolloClient({\n    ssrMode: typeof window === 'undefined',\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n}\n\nexport function initializeApollo(initialState = null) {\n  const _apolloClient = apolloClient ?? createApolloClient();\n\n  // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n  // gets hydrated here\n  if (initialState) {\n    // Get existing cache, loaded during client side data fetching\n    const existingCache = _apolloClient.extract();\n    // Restore the cache using the data passed from getStaticProps/getServerSideProps\n    // combined with the existing cached data\n    _apolloClient.cache.restore({ ...existingCache, ...initialState });\n  }\n  // For SSG and SSR always create a new Apollo Client\n  if (typeof window === 'undefined') return _apolloClient;\n  // Create the Apollo Client once in the client\n  if (!apolloClient) apolloClient = _apolloClient;\n\n  return _apolloClient;\n}\n\nexport function useApollo(initialState) {\n  const store = useMemo(() => initializeApollo(initialState), [initialState]);\n  return store;\n}\n"],"mappings":";;;;AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,YAAY,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,gBAAgB;AACtE,SAASC,UAAU,QAAQ,6BAA6B;AAExD,IAAIC,YAAY;AAEhB,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,IAAMC,QAAQ,GAAGH,UAAU,CAAC,UAACI,CAAC,EAAAC,IAAA,EAAkB;IAAA,IAAdC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACvC;IACA,IAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;IAEvD,OAAO;MACLJ,OAAO,EAAAK,aAAA,CAAAA,aAAA,KACFL,OAAO;QACVM,aAAa,EAAEL,KAAK,aAAAM,MAAA,CAAaN,KAAK,IAAK;MAAE;IAEjD,CAAC;EACH,CAAC,CAAC;EACF,IAAMO,QAAQ,GAAG,IAAIhB,QAAQ,CAAC;IAC5BiB,GAAG,EAAEP,OAAO,CAACC,GAAG,CAACO,oCAAoC;IAAE;IACvDC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,OAAO,IAAIpB,YAAY,CAAC;IACtBqB,OAAO,OAA+B;IACtCC,IAAI,EAAEhB,QAAQ,CAACU,MAAM,CAACC,QAAQ,CAAC;IAC/BM,KAAK,EAAE,IAAIrB,aAAa,CAAC;EAC3B,CAAC,CAAC;AACJ;AAEA,OAAO,SAASsB,gBAAgBA,CAAA,EAAsB;EAAA,IAAAC,cAAA;EAAA,IAArBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAClD,IAAMG,aAAa,IAAAL,cAAA,GAAGrB,YAAY,cAAAqB,cAAA,cAAAA,cAAA,GAAIpB,kBAAkB,CAAC,CAAC;;EAE1D;EACA;EACA,IAAIqB,YAAY,EAAE;IAChB;IACA,IAAMK,aAAa,GAAGD,aAAa,CAACE,OAAO,CAAC,CAAC;IAC7C;IACA;IACAF,aAAa,CAACP,KAAK,CAACU,OAAO,CAAAnB,aAAA,CAAAA,aAAA,KAAMiB,aAAa,GAAKL,YAAY,CAAE,CAAC;EACpE;EACA;EACA,WAAmC,OAAOI,aAAa;EACvD;EACA,IAAI,CAAC1B,YAAY,EAAEA,YAAY,GAAG0B,aAAa;EAE/C,OAAOA,aAAa;AACtB;AAEA,OAAO,SAASI,SAASA,CAACR,YAAY,EAAE;EAAAS,EAAA;EACtC,IAAMC,KAAK,GAAGrC,OAAO,CAAC;IAAA,OAAMyB,gBAAgB,CAACE,YAAY,CAAC;EAAA,GAAE,CAACA,YAAY,CAAC,CAAC;EAC3E,OAAOU,KAAK;AACd;AAACD,EAAA,CAHeD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}