{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/contexts/WithAuth.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useAuth } from \"./AuthContext\";\nconst withAuth = WrappedComponent => {\n  const Component = props => {\n    const {\n      user\n    } = useAuth();\n    const router = useRouter();\n    console.log(\"here \", user);\n    useEffect(() => {\n      if (!user) {\n        router.push('/login');\n      }\n    }, [isAuthenticated, router]);\n    if (!isAuthenticated) {\n      return null; // Optionally, you can return a loading spinner here\n    }\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }));\n  };\n  return Component;\n};\nexport default withAuth;","map":{"version":3,"names":["useEffect","useRouter","useAuth","withAuth","WrappedComponent","Component","props","user","router","console","log","push","isAuthenticated","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/chouaib/code/learn/frontend/contexts/WithAuth.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport {useAuth} from \"./AuthContext\";\n\nconst withAuth = (WrappedComponent: React.ComponentType) => {\n    const Component = (props: any) => {\n        const { user } = useAuth();\n        const router = useRouter();\n\n        console.log(\"here \" ,user)\n        useEffect(() => {\n            if (!user) {\n                router.push('/login');\n            }\n        }, [isAuthenticated, router]);\n\n        if (!isAuthenticated) {\n            return null; // Optionally, you can return a loading spinner here\n        }\n\n        return <WrappedComponent {...props} />;\n    };\n\n    return Component;\n};\n\nexport default withAuth;"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAAQC,OAAO,QAAO,eAAe;AAErC,MAAMC,QAAQ,GAAIC,gBAAqC,IAAK;EACxD,MAAMC,SAAS,GAAIC,KAAU,IAAK;IAC9B,MAAM;MAAEC;IAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;IAC1B,MAAMM,MAAM,GAAGP,SAAS,CAAC,CAAC;IAE1BQ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC1BP,SAAS,CAAC,MAAM;MACZ,IAAI,CAACO,IAAI,EAAE;QACPC,MAAM,CAACG,IAAI,CAAC,QAAQ,CAAC;MACzB;IACJ,CAAC,EAAE,CAACC,eAAe,EAAEJ,MAAM,CAAC,CAAC;IAE7B,IAAI,CAACI,eAAe,EAAE;MAClB,OAAO,IAAI,CAAC,CAAC;IACjB;IAEA,OAAOC,KAAA,CAACT,gBAAgB,EAAAU,QAAA,KAAKR,KAAK;MAAAS,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAC;EAC1C,CAAC;EAED,OAAOf,SAAS;AACpB,CAAC;AAED,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}