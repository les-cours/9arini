{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/home/chouaib/code/learn/frontend/components/learning/classroom/Chapters.tsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Sticky from 'react-stickynode';\nimport { gql, useQuery } from \"@apollo/client\";\nvar GET_Chapters = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nquery Chapters($classRoomID: String!) {\\n  chapters(classRoomID: $classRoomID) {\\n   chapterID\\n    title\\n    arabicTitle\\n    description\\n  }\\n}\\n\\n\"])));\nvar Chapters = function Chapters(_ref) {\n  _s();\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    onClick = _ref.onClick,\n    id = _ref.id;\n  var _useRouter = useRouter(),\n    query = _useRouter.query;\n  var _useQuery = useQuery(GET_Chapters, {\n      variables: {\n        classRoomID: id\n      },\n      notifyOnNetworkStatusChange: true\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    fetchMore = _useQuery.fetchMore;\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"No data available\");\n  console.log(data);\n  var chapters = data.chapters;\n  if (chapters.length == 0) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, \"No data available\");\n  return __jsx(Sticky, {\n    top: \".navbar\",\n    innerZ: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  });\n};\n_s(Chapters, \"s/ZY1dqc6In33JzrsEdunhFl/FA=\", false, function () {\n  return [useRouter, useQuery];\n});\n_c = Chapters;\nexport default Chapters;\nvar _c;\n$RefreshReg$(_c, \"Chapters\");","map":{"version":3,"names":["React","useRouter","Sticky","gql","useQuery","GET_Chapters","_templateObject","_taggedTemplateLiteral","Chapters","_ref","_s","_ref$className","className","onClick","id","_useRouter","query","_useQuery","variables","classRoomID","notifyOnNetworkStatusChange","data","loading","error","fetchMore","__jsx","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","console","log","chapters","length","top","innerZ","_c","$RefreshReg$"],"sources":["/home/chouaib/code/learn/frontend/components/learning/classroom/Chapters.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport MenuWrapper, { Menu, MenuItem, MenuLink } from \"../../SideMenu/SideMenu.styled\";\nimport {gql, useQuery} from \"@apollo/client\";\n\n\ntype MenuProps = {\n    className?: string;\n    onClick?: () => void;\n};\n\n\nconst GET_Chapters = gql`\nquery Chapters($classRoomID: String!) {\n  chapters(classRoomID: $classRoomID) {\n   chapterID\n    title\n    arabicTitle\n    description\n  }\n}\n\n`;\n\n\nconst Chapters = ({ className = '', onClick, id }) => {\n    const {query} = useRouter();\n\n\n\n\n    const { data, loading, error, fetchMore } =\n        useQuery<{ chapters: { title: string; chapterID: string }[] }>(GET_Chapters, {\n        variables: { classRoomID : id },\n        notifyOnNetworkStatusChange: true,\n    });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    if (!data) return <p>No data available</p>;\n\nconsole.log(data)\n    const { chapters } = data;\n\nif (chapters.length == 0 )\n    return <p>No data available</p>;\n\n\n\n\n\n\n    return (\n        <Sticky top=\".navbar\" innerZ=\"1\">\n            \n        </Sticky>\n    );\n};\n\nexport default Chapters;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAA6B,OAAO;AAChD,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAOC,MAAM,MAAM,kBAAkB;AAErC,SAAQC,GAAG,EAAEC,QAAQ,QAAO,gBAAgB;AAS5C,IAAMC,YAAY,GAAGF,GAAG,CAAAG,eAAA,KAAAA,eAAA,GAAAC,sBAAA,iKAUvB;AAGD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAwC;EAAAC,EAAA;EAAA,IAAAC,cAAA,GAAAF,IAAA,CAAlCG,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,EAAE,GAAAA,cAAA;IAAEE,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,EAAE,GAAAL,IAAA,CAAFK,EAAE;EAC3C,IAAAC,UAAA,GAAgBd,SAAS,CAAC,CAAC;IAApBe,KAAK,GAAAD,UAAA,CAALC,KAAK;EAKZ,IAAAC,SAAA,GACIb,QAAQ,CAAuDC,YAAY,EAAE;MAC7Ea,SAAS,EAAE;QAAEC,WAAW,EAAGL;MAAG,CAAC;MAC/BM,2BAA2B,EAAE;IACjC,CAAC,CAAC;IAJMC,IAAI,GAAAJ,SAAA,CAAJI,IAAI;IAAEC,OAAO,GAAAL,SAAA,CAAPK,OAAO;IAAEC,KAAK,GAAAN,SAAA,CAALM,KAAK;IAAEC,SAAS,GAAAP,SAAA,CAATO,SAAS;EAKvC,IAAIF,OAAO,EAAE,OAAOG,KAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EACrC,IAAIT,KAAK,EAAE,OAAOE,KAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACT,KAAK,CAACU,OAAW,CAAC;EAC/C,IAAI,CAACZ,IAAI,EAAE,OAAOI,KAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAoB,CAAC;EAE9CE,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;EACb,IAAQe,QAAQ,GAAKf,IAAI,CAAjBe,QAAQ;EAEpB,IAAIA,QAAQ,CAACC,MAAM,IAAI,CAAC,EACpB,OAAOZ,KAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAoB,CAAC;EAO/B,OACIP,KAAA,CAACvB,MAAM;IAACoC,GAAG,EAAC,SAAS;IAACC,MAAM,EAAC,GAAG;IAAAb,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAExB,CAAC;AAEjB,CAAC;AAACtB,EAAA,CA/BIF,QAAQ;EAAA,QACMP,SAAS,EAMrBG,QAAQ;AAAA;AAAAoC,EAAA,GAPVhC,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}