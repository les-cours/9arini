{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/chouaib/code/learn/frontend/containers/HookForm/LoginForm.tsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\nimport { useQuery } from '@apollo/client';\nvar LoginForm = function LoginForm(props) {\n  _s();\n  var _useForm = useForm(),\n    register = _useForm.register,\n    handleSubmit = _useForm.handleSubmit,\n    setValue = _useForm.setValue,\n    errors = _useForm.errors;\n  var _useQuery = useQuery(GET_DASHBOARD, {\n      notifyOnNetworkStatusChange: true\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    fetchMore = _useQuery.fetchMore;\n  if (!data) return null;\n  var _data$dashboard = data.dashboard,\n    productViews = _data$dashboard.productViews,\n    recentApps = _data$dashboard.recentApps,\n    productsBar = _data$dashboard.productsBar,\n    cashFlow = _data$dashboard.cashFlow;\n  useEffect(function () {\n    register({\n      name: 'email'\n    });\n    register({\n      name: 'password'\n    });\n  }, [register]);\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n    alert(JSON.stringify(data, null, 4));\n  };\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Block, {\n    marginBottom: \"30px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    label: \"Your Email\",\n    caption: \"johndoe@demo.io\",\n    error: errors.email && 'Please enter a valid email address',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    name: \"email\",\n    inputRef: register({\n      required: true,\n      pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    }),\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))), __jsx(Block, {\n    marginBottom: \"30px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(FormControl, {\n    label: \"Password\",\n    caption: \"********\",\n    error: errors.name && 'This field is required',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    inputRef: register({\n      required: true,\n      maxLength: 32\n    }),\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), __jsx(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n_s(LoginForm, \"t2TSKwWMP18gp72HlCr5BCyJZHo=\", false, function () {\n  return [useForm, useQuery];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useForm","FormControl","Input","Button","Block","useQuery","LoginForm","props","_s","_useForm","register","handleSubmit","setValue","errors","_useQuery","GET_DASHBOARD","notifyOnNetworkStatusChange","data","loading","error","fetchMore","_data$dashboard","dashboard","productViews","recentApps","productsBar","cashFlow","name","onSubmit","console","log","alert","JSON","stringify","__jsx","style","width","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","caption","email","inputRef","required","pattern","overrides","InputContainer","backgroundColor","type","maxLength","_c","$RefreshReg$"],"sources":["/home/chouaib/code/learn/frontend/containers/HookForm/LoginForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\nimport { useQuery, gql } from '@apollo/client';\nimport { withApollo } from 'apollo/client';\ntype Props = any;\n\nconst LoginForm: React.FC<Props> = props => {\n  const { register, handleSubmit, setValue, errors } = useForm();\n\n\n\n  const { data, loading, error, fetchMore } = useQuery(GET_DASHBOARD, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\tif (!data) return null;\n\tconst { productViews, recentApps, productsBar, cashFlow } = data.dashboard;\n\n\n  useEffect(() => {\n    register({ name: 'email' });\n    register({ name: 'password' });\n\n  }, [register]);\n\n  const onSubmit = data => {\n    console.log(data);\n    alert(JSON.stringify(data, null, 4));\n  };\n\n\n\n\n\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%' }}>\n\n\n      <Block marginBottom=\"30px\">\n        <FormControl\n          label=\"Your Email\"\n          caption=\"johndoe@demo.io\"\n          error={errors.email && 'Please enter a valid email address'}\n        >\n          <Input\n            name=\"email\"\n            inputRef={register({\n              required: true,\n              pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n            })}\n            overrides={{\n              InputContainer: {\n                style: () => {\n                  return { backgroundColor: 'transparent' };\n                },\n              },\n            }}\n          />\n        </FormControl>\n      </Block>\n\n      <Block marginBottom=\"30px\">\n        <FormControl\n          label=\"Password\"\n          caption=\"********\"\n          error={errors.name && 'This field is required'}\n        >\n          <Input\n            type=\"password\"\n            name=\"password\"\n            inputRef={register({ required: true, maxLength: 32})}\n            overrides={{\n              InputContainer: {\n                style: () => {\n                  return { backgroundColor: 'transparent' };\n                },\n              },\n            }}\n          />\n        </FormControl>\n      </Block>\n\n      <Button type=\"submit\">Login</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}