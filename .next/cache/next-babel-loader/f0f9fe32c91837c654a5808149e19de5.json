{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chouaib/code/learn/frontend/pages/_app.tsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron } from 'styletron';\nimport Layout from 'components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from 'contexts/theme/theme.provider';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { ApolloProvider } from '@apollo/client';\nimport { useApollo } from 'apollo/github.client';\n// external css\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'assets/css/reset.css';\nimport 'react-flexbox-grid/dist/react-flexbox-grid.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport 'typeface-open-sans';\nimport { AuthProvider } from 'contexts/AuthContext';\nexport default function CustomApp(_ref) {\n  _s();\n  var Component = _ref.Component,\n    pageProps = _ref.pageProps;\n  var _React$useState = React.useState(THEME.light),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    theme = _React$useState2[0],\n    setTheme = _React$useState2[1];\n  React.useEffect(function () {\n    var SAVED_THEME = localStorage.getItem('theme');\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n    setTheme(SAVED_THEME);\n  }, []);\n  var apolloGithubClient = useApollo(pageProps.initialApolloState);\n  return __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), __jsx(ApolloProvider, {\n    client: apolloGithubClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeSwitcherProvider, {\n    value: {\n      theme: theme,\n      setTheme: setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(StyletronProvider, {\n    value: styletron,\n    debugAfterHydration: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(BaseProvider, {\n    theme: theme === THEME.light ? _objectSpread(_objectSpread({}, LightTheme), {}, {\n      direction: 'ltr'\n    }) : _objectSpread(_objectSpread({}, DarkTheme), {}, {\n      direction: 'ltr'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(CartProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))))))))));\n}\n\n// pages/_app.tsx\n_s(CustomApp, \"wdTcRUVjqx+Poi0Nmu1srtIjkzc=\", false, function () {\n  return [useApollo];\n});\n_c = CustomApp;\nexport default MyApp;\nvar _c;\n$RefreshReg$(_c, \"CustomApp\");","map":{"version":3,"names":["React","Provider","StyletronProvider","BaseProvider","LightTheme","DarkTheme","styletron","Layout","ThemeSwitcherProvider","THEME","CartProvider","ApolloProvider","useApollo","AuthProvider","CustomApp","_ref","_s","Component","pageProps","_React$useState","useState","light","_React$useState2","_slicedToArray","theme","setTheme","useEffect","SAVED_THEME","localStorage","getItem","apolloGithubClient","initialApolloState","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","client","value","debugAfterHydration","_objectSpread","direction","_c","MyApp","$RefreshReg$"],"sources":["/home/chouaib/code/learn/frontend/pages/_app.tsx"],"sourcesContent":["import React from 'react';\nimport { AppProps } from 'next/app';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron, debug } from 'styletron';\nimport Layout from 'components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from 'contexts/theme/theme.provider';\nimport { CartProvider } from 'contexts/cart/cart.provider';\nimport { ApolloProvider } from '@apollo/client';\nimport { useApollo } from 'apollo/github.client';\n// external css\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'assets/css/reset.css';\nimport 'react-flexbox-grid/dist/react-flexbox-grid.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport 'typeface-open-sans';\nimport { AuthProvider } from 'contexts/AuthContext';\nexport default function CustomApp({ Component, pageProps }: AppProps) {\n  const [theme, setTheme] = React.useState(THEME.light);\n  React.useEffect(() => {\n    let SAVED_THEME = localStorage.getItem('theme');\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n    setTheme(SAVED_THEME);\n  }, []);\n  const apolloGithubClient = useApollo(pageProps.initialApolloState);\n\n  return (\n    <AuthProvider>\n      <Component {...pageProps}>\n    <ApolloProvider client={apolloGithubClient}>\n      <ThemeSwitcherProvider value={{ theme, setTheme }}>\n        <StyletronProvider value={styletron} debugAfterHydration>\n          <BaseProvider\n            theme={\n              theme === THEME.light\n                ? { ...LightTheme, direction: 'ltr' }\n                : { ...DarkTheme, direction: 'ltr' }\n            }\n          >\n            <CartProvider>\n              <Layout>\n                <Component {...pageProps} />\n              </Layout>\n            </CartProvider>\n          </BaseProvider>\n        </StyletronProvider>\n      </ThemeSwitcherProvider>\n    </ApolloProvider>\n      </Component>\n    </AuthProvider>\n  );\n}\n\n\n// pages/_app.tsx\n\nexport default MyApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}