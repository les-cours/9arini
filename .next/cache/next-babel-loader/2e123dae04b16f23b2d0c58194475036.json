{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/contexts/theme/WithAuth.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../AuthContext';\nconst withAuth = WrappedComponent => {\n  const Component = props => {\n    const router = useRouter();\n    const {\n      0: user,\n      1: setUser\n    } = useState(null);\n    // @ts-ignore\n    const {\n      checkLogin\n    } = useAuth();\n    console.log(user);\n    useEffect(() => {\n      setUser(checkLogin());\n      if (user == null) {\n        router.push('/login');\n        return null; // You can also return a loading indicator or custom message here\n      }\n    }, []);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }));\n  };\n  return Component;\n};\nexport default withAuth;","map":{"version":3,"names":["useEffect","useState","useRouter","useAuth","withAuth","WrappedComponent","Component","props","router","user","setUser","checkLogin","console","log","push","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/chouaib/code/learn/frontend/contexts/theme/WithAuth.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../AuthContext';\n\nconst withAuth = (WrappedComponent: React.ComponentType) => {\n    const Component = (props: any) => {\n        const router = useRouter();\n        const [user, setUser] = useState(null)\n        // @ts-ignore\n        const { checkLogin } = useAuth();\n\n        console.log(user)\n        useEffect(() => {\n            setUser(checkLogin())\n            if (user == null) {\n                router.push('/login')\n                return null; // You can also return a loading indicator or custom message here\n            }\n        }, []);\n\n\n\n        return <WrappedComponent {...props} />;\n    };\n\n    return Component;\n};\n\nexport default withAuth;\n"],"mappings":";;;;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AAExC,MAAMC,QAAQ,GAAIC,gBAAqC,IAAK;EACxD,MAAMC,SAAS,GAAIC,KAAU,IAAK;IAC9B,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAM;MAAA,GAACO,IAAI;MAAA,GAAEC;IAAO,IAAIT,QAAQ,CAAC,IAAI,CAAC;IACtC;IACA,MAAM;MAAEU;IAAW,CAAC,GAAGR,OAAO,CAAC,CAAC;IAEhCS,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjBT,SAAS,CAAC,MAAM;MACZU,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC;MACrB,IAAIF,IAAI,IAAI,IAAI,EAAE;QACdD,MAAM,CAACM,IAAI,CAAC,QAAQ,CAAC;QACrB,OAAO,IAAI,CAAC,CAAC;MACjB;IACJ,CAAC,EAAE,EAAE,CAAC;IAIN,OAAOC,KAAA,CAACV,gBAAgB,EAAAW,QAAA,KAAKT,KAAK;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAC;EAC1C,CAAC;EAED,OAAOhB,SAAS;AACpB,CAAC;AAED,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}