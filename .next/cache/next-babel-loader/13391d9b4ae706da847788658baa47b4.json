{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/pages/classrooms/[classRoomID]/detail.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport Head from 'next/head';\nimport { useQuery, gql } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Container from 'components/UiElements/Container/Container';\nimport { withApollo } from '../../../apollo/client';\nimport { Block } from \"baseui/block\";\nimport { Cell, Grid } from \"baseui/layout-grid\";\nimport { useForm } from \"react-hook-form\";\nimport Chapters from \"../../../components/learning/classroom/Chapters\";\nconst GET_CLASSROOM = gql`\nquery ClassRoom($classRoomID: String!) {\n  classRoom(classRoomID: $classRoomID) {\n    title\n    studentCount\n    price\n    Rating\n    image \n    badge\n  }\n}\n\n`;\ntoast.configure();\nconst ProductSingle = () => {\n  const {\n    query: {\n      classRoomID\n    }\n  } = useRouter();\n  console.log(classRoomID);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CLASSROOM, {\n    variables: {\n      classRoomID\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  console.log(data);\n  if (!data) return null;\n  const {\n    title,\n    studentCount,\n    price,\n    Rating,\n    image,\n    badge\n  } = data.classRoom;\n  console.log(data, 'data');\n\n  //form\n\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    errors\n  } = useForm();\n  useEffect(() => {\n    register({\n      name: 'avatar'\n    });\n  }, [register]);\n  const handleOnCrop = img => {\n    setValue('avatar', img);\n  };\n  const handleBeforeFileLoad = e => {\n    if (e.target.files[0].size > 71680) {\n      alert('File is too big!');\n      e.target.value = '';\n    }\n  };\n  const router = useRouter();\n  const onSubmit = data => {\n    router.push(\"/classroom/{uuid}/detail\");\n  };\n  //endform\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, title, \" | 9ARINI.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  })), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, __jsx(Block, {\n    paddingTop: ['0', '0', '0', '40px'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    gridColumns: 12,\n    gridGutters: 0,\n    gridMargins: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, __jsx(Cell, {\n    span: [12, 12, 3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(Chapters, {\n    id: classRoomID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  })), __jsx(Cell, {\n    span: [12, 12, 9],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"content\")))));\n};\nexport default withApollo(ProductSingle);","map":{"version":3,"names":["React","useEffect","toast","Head","useQuery","gql","useRouter","Container","withApollo","Block","Cell","Grid","useForm","Chapters","GET_CLASSROOM","configure","ProductSingle","query","classRoomID","console","log","data","loading","error","variables","notifyOnNetworkStatusChange","title","studentCount","price","Rating","image","badge","classRoom","register","setValue","handleSubmit","errors","name","handleOnCrop","img","handleBeforeFileLoad","e","target","files","size","alert","value","router","onSubmit","push","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","content","paddingTop","gridColumns","gridGutters","gridMargins","span","id"],"sources":["/home/chouaib/code/learn/frontend/pages/classrooms/[classRoomID]/detail.tsx"],"sourcesContent":["import React, {\n\tuseEffect,\n} from 'react';\n\nimport { toast } from 'react-toastify';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { useQuery, gql } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Container from 'components/UiElements/Container/Container';\n\nimport { withApollo } from '../../../apollo/client';\n\n\nimport {Block} from \"baseui/block\";\nimport {Cell, Grid} from \"baseui/layout-grid\";\nimport dynamic from \"next/dynamic\";\nimport {useForm} from \"react-hook-form\";\nimport Chapters\n\tfrom \"../../../components/learning/classroom/Chapters\";\n\n\n\ntype FormData = {\n\tavatar: string;\n\tname: string;\n\tusername: string;\n\temail: string;\n};\n\n\nconst GET_CLASSROOM = gql`\nquery ClassRoom($classRoomID: String!) {\n  classRoom(classRoomID: $classRoomID) {\n    title\n    studentCount\n    price\n    Rating\n    image \n    badge\n  }\n}\n\n`;\n\ntoast.configure();\n\nconst ProductSingle: NextPage<{}> = () => {\n\tconst {\n\t\tquery: { classRoomID },\n\t} = useRouter();\n\n\tconsole.log(classRoomID)\n\tconst { data, loading, error } = useQuery(GET_CLASSROOM, {\n\t\tvariables: {\n\t\t\tclassRoomID\n\t\t},\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\n\tconsole.log(data)\n\n\n\n\n\tif (!data) return null;\n\tconst {\n\t\ttitle,\n\t\tstudentCount,\n\t\tprice,\n\t\tRating,\n\t\timage,\n\t\tbadge,\n\t} =  data.classRoom;\n\n\n\tconsole.log(data, 'data');\n\n//form\n\n\tconst { register, setValue, handleSubmit, errors } = useForm<\n\t\tFormData\n\t>();\n\n\tuseEffect(() => {\n\t\tregister({ name: 'avatar' });\n\t}, [register]);\n\n\tconst handleOnCrop = (img: string) => {\n\t\tsetValue('avatar', img);\n\t};\n\n\tconst handleBeforeFileLoad = (e: any) => {\n\t\tif (e.target.files[0].size > 71680) {\n\t\t\talert('File is too big!');\n\t\t\te.target.value = '';\n\t\t}\n\t};\n\n\tconst router = useRouter()\n\tconst onSubmit = (data: any) => {\n\t\trouter.push(\"/classroom/{uuid}/detail\")\n\t};\n\t//endform\n\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{title} | 9ARINI.</title>\n\t\t\t\t<meta name=\"Description\" content={title} />\n\t\t\t</Head>\n\n\t\t\t<Container>\n\t\t\t\t<Block paddingTop={['0', '0', '0', '40px']}>\n\t\t\t\t\t<Grid gridColumns={12} gridGutters={0} gridMargins={0}>\n\t\t\t\t\t\t<Cell span={[12, 12, 3]}>\n\t\t\t\t\t\t\t{/* Assuming ClassRooms component here */}\n\t\t\t\t\t\t\t<Chapters id={classRoomID}/>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell span={[12, 12, 9]}>\n\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Block>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default withApollo(ProductSingle);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}