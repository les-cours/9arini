{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/contexts/AuthContext.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { jwtDecode } from 'jwt-decode';\nconst AuthContext = createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const router = useRouter();\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      const decoded = jwtDecode(token);\n      setUser(decoded);\n    }\n  }, []);\n  const login = async requestBody => {\n    try {\n      const response = await fetch('http://127.0.0.1:3004/teacher-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Invalid credentials');\n      }\n      const res = await response.json();\n      localStorage.setItem('jwtToken', res.user.accessToken);\n      const decoded = jwtDecode(res.user.accessToken);\n      setUser(decoded);\n      router.push('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      // Handle error (e.g., set error state)\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('jwtToken');\n    setUser(null);\n    router.push('/login');\n  };\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    return;\n  }\n  return context;\n};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useRouter","jwtDecode","AuthContext","undefined","AuthProvider","children","user","setUser","router","token","localStorage","getItem","decoded","login","requestBody","response","fetch","method","headers","body","JSON","stringify","ok","Error","res","json","setItem","accessToken","push","error","console","logout","removeItem","__jsx","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useAuth","context"],"sources":["/home/chouaib/code/learn/frontend/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useRouter } from 'next/router';\nimport {jwtDecode, JwtPayload } from 'jwt-decode';\n\ninterface AuthContextType {\n  user: JwtPayload | null;\n  login: (requestBody: { username: string; password: string,osname: string}) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<JwtPayload | null>(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      const decoded = jwtDecode<JwtPayload>(token);\n      setUser(decoded);\n    }\n  }, []);\n\n  const login = async (requestBody: { username: string; password: string,osname:\"linux\" }) => {\n    try {\n      const response = await fetch('http://127.0.0.1:3004/teacher-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        throw new Error('Invalid credentials');\n      }\n\n      const res = await response.json();\n      localStorage.setItem('jwtToken', res.user.accessToken);\n      const decoded = jwtDecode<JwtPayload>(res.user.accessToken);\n      setUser(decoded);\n      router.push('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      // Handle error (e.g., set error state)\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('jwtToken');\n    setUser(null);\n    router.push('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n   return \n  }\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACjF,SAASC,SAAS,QAAQ,aAAa;AACvC,SAAQC,SAAS,QAAoB,YAAY;AAQjD,MAAMC,WAAW,GAAGN,aAAa,CAA8BO,SAAS,CAAC;AAMzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAA4B,CAAC,KAAK;EAC/D,MAAM;IAAA,GAACC,IAAI;IAAA,GAAEC;EAAO,IAAIT,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAMU,MAAM,GAAGR,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACT,MAAMG,OAAO,GAAGX,SAAS,CAAaQ,KAAK,CAAC;MAC5CF,OAAO,CAACK,OAAO,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG,MAAOC,WAAkE,IAAK;IAC1F,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,MAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACjCf,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEF,GAAG,CAAClB,IAAI,CAACqB,WAAW,CAAC;MACtD,MAAMf,OAAO,GAAGX,SAAS,CAAauB,GAAG,CAAClB,IAAI,CAACqB,WAAW,CAAC;MAC3DpB,OAAO,CAACK,OAAO,CAAC;MAChBJ,MAAM,CAACoB,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC;IACF;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBrB,YAAY,CAACsB,UAAU,CAAC,UAAU,CAAC;IACnCzB,OAAO,CAAC,IAAI,CAAC;IACbC,MAAM,CAACoB,IAAI,CAAC,QAAQ,CAAC;EACvB,CAAC;EAED,OACEK,KAAA,CAAC/B,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAE7B,IAAI;MAAEO,KAAK;MAAEkB;IAAO,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDpC,QACmB,CAAC;AAE3B,CAAC;AAED,OAAO,MAAMqC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAG9C,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACyC,OAAO,EAAE;IACb;EACD;EACA,OAAOA,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}