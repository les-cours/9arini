{"ast":null,"code":"var _jsxFileName = \"/home/chouaib/code/learn/frontend/components/learning/classroom/ClassRoom.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport MenuWrapper, { Menu, MenuItem, MenuLink } from \"../../SideMenu/SideMenu.styled\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_CLASSROOMS = gql`\n\tquery MyClassRoom($id: String!) {\n  classRoomsTeacher(teacherID: $id) {\n   title\n    classRoomID\n  }\n}\n`;\nconst ClassRooms = ({\n  className = '',\n  onClick\n}) => {\n  const router = useRouter();\n  console.log(\"pathname\", router.query.classRoomID);\n  const pathname = \"\";\n  let classRooms = [];\n  const {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(GET_CLASSROOMS, {\n    variables: {\n      id: '3cd7be2c-56c3-4c6b-bb55-76810decc9f7'\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"No data available\");\n  const {\n    classRoomsTeacher\n  } = data;\n  classRooms = classRoomsTeacher;\n  return __jsx(Sticky, {\n    top: \".navbar\",\n    innerZ: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(MenuWrapper, {\n    className: \"side-menu-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Menu, {\n    className: `side-menu ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, classRooms.map(item => {\n    console.log(pathname, item.classRoomID);\n    return __jsx(MenuItem, {\n      key: `side-menu--key${item.classRoomID}`,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, __jsx(Link, {\n      href: \"/classrooms/\" + item.classRoomID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, __jsx(MenuLink, {\n      className: pathname == item.classRoomID ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, item.title)));\n  }))));\n};\nexport default ClassRooms;","map":{"version":3,"names":["React","useRouter","Link","Sticky","MenuWrapper","Menu","MenuItem","MenuLink","gql","useQuery","GET_CLASSROOMS","ClassRooms","className","onClick","router","console","log","query","classRoomID","pathname","classRooms","data","loading","error","fetchMore","variables","id","notifyOnNetworkStatusChange","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","classRoomsTeacher","top","innerZ","map","item","key","href","title"],"sources":["/home/chouaib/code/learn/frontend/components/learning/classroom/ClassRoom.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport MenuWrapper, { Menu, MenuItem, MenuLink } from \"../../SideMenu/SideMenu.styled\";\nimport {gql, useQuery} from \"@apollo/client\";\n\n\ntype MenuProps = {\n    className?: string;\n    onClick?: () => void;\n};\n\n\nconst GET_CLASSROOMS = gql`\n\tquery MyClassRoom($id: String!) {\n  classRoomsTeacher(teacherID: $id) {\n   title\n    classRoomID\n  }\n}\n`;\n\n\nconst ClassRooms = ({ className = '', onClick }: MenuProps) => {\n    const router = useRouter();\n\n    console.log(\"pathname\",router.query.classRoomID)\n\n    const pathname = \"\"\n    let classRooms = []\n\n    const { data, loading, error, fetchMore } = useQuery<{ classRoomsTeacher: { title: string; classRoomID: string }[] }>(GET_CLASSROOMS, {\n        variables: { id: '3cd7be2c-56c3-4c6b-bb55-76810decc9f7' },\n        notifyOnNetworkStatusChange: true,\n    });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    if (!data) return <p>No data available</p>;\n\n    const { classRoomsTeacher } = data;\n\n     classRooms =  classRoomsTeacher\n\n\n\n\n\n\n\n    return (\n        <Sticky top=\".navbar\" innerZ=\"1\">\n            <MenuWrapper className=\"side-menu-wrapper\">\n                <Menu className={`side-menu ${className}`}>\n                    {classRooms.map((item) => {\n                        console.log(pathname , item.classRoomID)\n\n                        return (\n                            <MenuItem key={`side-menu--key${item.classRoomID}`} onClick={onClick}>\n                                <Link href={\"/classrooms/\"+item.classRoomID}>\n                                    <MenuLink className={pathname == item.classRoomID ? 'active' : ''}>\n                                        {item.title}\n                                    </MenuLink>\n                                </Link>\n                            </MenuItem>\n                        );\n                    })}\n                </Menu>\n            </MenuWrapper>\n        </Sticky>\n    );\n};\n\nexport default ClassRooms;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}